name: Terraform CD - Serverless

on:
  push:
    branches:
      - main
      - master

jobs:
  terraform-apply:
    name: Terraform Apply Serverless
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Ensure backend bucket exists
        run: ./create_backend_bucket.sh

      - name: Terraform Init
        run: terraform init -reconfigure

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve \
            -var="secret_key=${{ secrets.SECRET_KEY }}"

      - name: Get API Gateway URL
        id: api_url
        run: |
          API_URL=$(terraform output -raw base_url 2>/dev/null || echo "not-available")
          echo "api_url=$API_URL" >> $GITHUB_OUTPUT
          echo "✅ API Gateway URL: $API_URL"

      - name: Display Success Message
        run: |
          echo "🎉 Serverless deployment completed successfully!"
          echo "📍 API Gateway URL: ${{ steps.api_url.outputs.api_url }}"
          echo ""
          echo "🔗 Available endpoints:"
          echo "  • POST /auth/register → Lambda RegisterUser"
          echo "  • POST /auth/login → Lambda LoginUser"
          echo "  • GET /auth/anonymous → Lambda AnonymousLogin"
          echo "  • All other routes → tc-golunch-api (EKS)"